From c7bf73cb2fe051f47a0091c5b1fb9a42bcf17985 Mon Sep 17 00:00:00 2001
From: Arthur Williams <taaparthur@gmail.com>
Date: Tue, 21 Apr 2020 11:22:52 -0700
Subject: [PATCH 02/15] Applied newterm patch

---
 config.def.h |  1 +
 st.c         | 21 +++++++++++++++++++++
 st.h         |  1 +
 3 files changed, 23 insertions(+)

diff --git a/config.def.h b/config.def.h
index d598b70..c4a7d10 100644
--- a/config.def.h
+++ b/config.def.h
@@ -200,6 +200,7 @@ static Shortcut shortcuts[] = {
 	{ ShiftMask,            XK_Insert,      selpaste,       {.i =  0} },
 	{ TERMMOD,              XK_Num_Lock,    numlock,        {.i =  0} },
 	{ MODKEY,               XK_l,           copyurl,        {.i =  0} },
+    { TERMMOD,              XK_t,           newterm,        {.i =  0} },
 };
 
 /*
diff --git a/st.c b/st.c
index 43c4ce7..3fd4b75 100644
--- a/st.c
+++ b/st.c
@@ -153,6 +153,7 @@ typedef struct {
 } STREscape;
 
 static void execsh(char *, char **);
+static char *getcwd_by_pid(pid_t pid);
 static void stty(char **);
 static void sigchld(int);
 static void ttywriteraw(const char *, size_t);
@@ -1058,6 +1059,26 @@ tswapscreen(void)
 	tfulldirt();
 }
 
+void
+newterm(const Arg* a)
+{
+	switch (fork()) {
+	case -1:
+		die("fork failed: %s\n", strerror(errno));
+		break;
+	case 0:
+		chdir(getcwd_by_pid(pid));
+		execlp("st", "./st", NULL);
+		break;
+	}
+}
+
+static char *getcwd_by_pid(pid_t pid) {
+	char buf[32];
+	snprintf(buf, sizeof buf, "/proc/%d/cwd", pid);
+	return realpath(buf, NULL);
+}
+
 void
 tscrolldown(int orig, int n)
 {
diff --git a/st.h b/st.h
index d84d3fc..69703f0 100644
--- a/st.h
+++ b/st.h
@@ -81,6 +81,7 @@ void die(const char *, ...);
 void redraw(void);
 void draw(void);
 
+void newterm(const Arg *);
 void printscreen(const Arg *);
 void printsel(const Arg *);
 void sendbreak(const Arg *);
-- 
2.30.1

