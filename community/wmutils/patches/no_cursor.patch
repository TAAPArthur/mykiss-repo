--- a/config.mk
+++ b/config.mk
@@ -4,6 +4,6 @@
 CC      = cc
 LD      = $(CC)

-CFLAGS  = -std=c99 -pedantic -Wall -Os -I/usr/X11R6/include
-LDFLAGS = -lxcb -lxcb-util -lxcb-cursor -L/usr/X11R6/lib
+CFLAGS  = -std=c99 -pedantic -Wall -Os -I/usr/X11R6/include -DNO_CURSOR
+LDFLAGS = -lxcb -lxcb-util -L/usr/X11R6/lib

--- a/slw.c
+++ b/slw.c
@@ -5,7 +5,9 @@
 #include <stdlib.h>
 #include <xcb/xcb.h>
 #include <xcb/xcb_aux.h>
+#ifndef NO_CURSOR
 #include <xcb/xcb_cursor.h>
+#endif

 #include "util.h"

@@ -20,16 +22,17 @@
 {
 	uint32_t val[] = { XCB_EVENT_MASK_BUTTON_PRESS | XCB_EVENT_MASK_BUTTON_RELEASE  };
 	xcb_window_t w = 0;
-	xcb_cursor_t p;
-	xcb_cursor_context_t *ctx;
+	xcb_cursor_t p = 0;
 	xcb_grab_pointer_cookie_t c;
 	xcb_grab_pointer_reply_t *r;
 	xcb_generic_event_t *e;
-
+#ifndef NO_CURSOR
+	xcb_cursor_context_t *ctx;
 	if (xcb_cursor_context_new(conn, scr, &ctx) < 0)
 		errx(1, "cannot instantiate cursor");
-
 	p = xcb_cursor_load_cursor(ctx, XHAIR);
+#endif
+
 	xcb_flush(conn);
 
 	c = xcb_grab_pointer(conn, 0, scr->root,
@@ -51,7 +54,9 @@
 			w = ((xcb_button_press_event_t*)e)->child;
 			break;
 		case XCB_BUTTON_RELEASE:
+#ifndef NO_CURSOR
 			xcb_cursor_context_free(ctx);
+#endif
 			return w;
 			break; /* NOTREACHED */
 		}
